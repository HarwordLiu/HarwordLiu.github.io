<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HarwordLiu</title>
    <description>&lt;p&gt;&lt;/p&gt;&lt;p&gt;用我不悠扬的歌声&lt;/p&gt;&lt;p&gt;温暖你整个旅途&lt;/p&gt;</description>
    <link>http://vno.onevcat.com/</link>
    <atom:link href="http://vno.onevcat.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 10 Nov 2016 11:25:10 +0800</pubDate>
    <lastBuildDate>Thu, 10 Nov 2016 11:25:10 +0800</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>JavaScript自学第三天 - HarwordLiu</title>
        <description>&lt;h1 id=&quot;javascript-&quot;&gt;JavaScript 函数&lt;/h1&gt;
&lt;p&gt;函数是由事件驱动的或者当它被调用时执行的可重复使用的代码块。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onclick=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;myFunction()&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Try it&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;javascript--1&quot;&gt;JavaScript 函数语法&lt;/h2&gt;
&lt;p&gt;函数就是包裹在花括号中的代码块，前面使用了关键词 &lt;code class=&quot;highlighter-rouge&quot;&gt;function&lt;/code&gt;：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function functionName()
{
	执行代码
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;当调用该函数时，会执行函数内的代码。
可以在某事件发生时直接调用函数（比如当用户点击按钮时），并且可由 &lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 在任何位置进行调用。&lt;/p&gt;
&lt;h2 id=&quot;section&quot;&gt;调用带参数的函数&lt;/h2&gt;
&lt;p&gt;在调用函数时，可以向其传递值，这些值被称为参数。
这些参数可以在函数中使用。可以发送任意多的参数，由逗号 &lt;code class=&quot;highlighter-rouge&quot;&gt;,&lt;/code&gt; 分隔：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;myFunction(argument1,argument2)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;声明函数时，把参数作为变量来声明：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function myFunction(var1,var2)
{
	代码
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;变量和参数必须以一致的顺序出现。第一个变量就是第一个被传递的参数的给定的值，以此类推。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;button onclick=&quot;myFunction('Harry Potter','Wizard')&quot;&amp;gt;Try it&amp;lt;/button&amp;gt;

&amp;lt;script&amp;gt;
function myFunction(name,job)
{
alert(&quot;Welcome &quot; + name + &quot;, the &quot; + job);
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;上面的函数在按钮被点击时会提示 “Welcome Harry Potter, the Wizard”。
函数很灵活，您可以使用不同的参数来调用该函数，这样就会给出不同的消息：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;button onclick=&quot;myFunction('Harry Potter','Wizard')&quot;&amp;gt;Try it&amp;lt;/button&amp;gt;
&amp;lt;button onclick=&quot;myFunction('Bob','Builder')&quot;&amp;gt;Try it&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;根据点击的不同的按钮，上面的例子会提示 “Welcome Harry Potter, the Wizard” 或 “Welcome Bob, the Builder”。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;带有返回值的函数&lt;/h2&gt;

&lt;p&gt;有时，我们会希望函数将值返回调用它的地方。
通过使用 return 语句就可以实现。
在使用 return 语句时，函数会停止执行，并返回指定的值。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function myFunction()
{
   	 var x=5;
   		 return x;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;上面的函数会返回值 5。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt; 整个 &lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 并不会停止执行，仅仅是函数。&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 将继续执行代码，从调用函数的地方。
函数调用将被返回值取代：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var myVar=myFunction();
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;myVar&lt;/code&gt; 变量的值是 &lt;code class=&quot;highlighter-rouge&quot;&gt;5&lt;/code&gt;，也就是函数 &lt;code class=&quot;highlighter-rouge&quot;&gt;myFunction()&lt;/code&gt; 所返回的值。&lt;/p&gt;

&lt;p&gt;即使不把它保存为变量，也可以使用返回值：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;document.getElementById(&quot;demo&quot;).innerHTML=myFunction();
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;demo&lt;/code&gt; 元素的 &lt;code class=&quot;highlighter-rouge&quot;&gt;innerHTML&lt;/code&gt; 将成为 5，也就是函数 &lt;code class=&quot;highlighter-rouge&quot;&gt;myFunction()&lt;/code&gt; 所返回的值。&lt;/p&gt;

&lt;p&gt;可以使返回值基于传递到函数中的参数：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function myFunction(a,b)
{
	return a*b;
}
document.getElementById(&quot;demo&quot;).innerHTML=myFunction(4,3);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;demo&lt;/code&gt; 元素的 innerHTML 将是：&lt;code class=&quot;highlighter-rouge&quot;&gt;12&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;当然这里的&lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt;和iOS中的&lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt;基本相同，也可以用于提前结束函数，跳出函数：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function myFunction(a,b)
{
	if (a&amp;gt;b)
	{
		return;
	}
	x=a+b
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt; 大于 &lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt;，则上面的代码将退出函数，并不会计算 &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt; 的总和。&lt;/p&gt;

&lt;h2 id=&quot;javascript--2&quot;&gt;局部 JavaScript 变量&lt;/h2&gt;

&lt;p&gt;在 &lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 函数内部声明的变量（使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt;）是局部变量，所以只能在函数内部访问它。（该变量的作用域是局部的）。
您可以在不同的函数中使用名称相同的局部变量，因为只有声明过该变量的函数才能识别出该变量。
只要函数运行完毕，本地变量就会被删除。&lt;/p&gt;

&lt;h2 id=&quot;javascript--3&quot;&gt;全局 JavaScript 变量&lt;/h2&gt;

&lt;p&gt;在函数外声明的变量是全局变量，网页上的所有脚本和函数都能访问它。&lt;/p&gt;

&lt;h2 id=&quot;javascript--4&quot;&gt;JavaScript 变量的生存期&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 变量的生命期从它们被声明的时间开始。
局部变量会在函数运行以后被删除。
全局变量会在页面关闭后被删除。&lt;/p&gt;

&lt;h2 id=&quot;javascript--5&quot;&gt;向未声明的 JavaScript 变量分配值&lt;/h2&gt;

&lt;p&gt;如果把值赋给尚未声明的变量，该变量将被自动作为全局变量声明。&lt;/p&gt;

&lt;p&gt;这条语句：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;carname=&quot;Volvo&quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;将声明一个全局变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;carname&lt;/code&gt;，即使它在函数内执行。&lt;/p&gt;

&lt;h1 id=&quot;javascript--6&quot;&gt;JavaScript 作用域&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;作用域&lt;/code&gt;可访问变量的集合。在 &lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 中, 对象和函数同样也是变量。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;在 &lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 中, 作用域为可访问变量，对象，函数的集合。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 函数作用域: 作用域在函数内修改。&lt;/p&gt;

&lt;h2 id=&quot;javascript--7&quot;&gt;JavaScript 局部作用域&lt;/h2&gt;

&lt;p&gt;变量在函数内声明，变量为局部作用域。
局部变量：只能在函数内部访问。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// 此处不能调用 carName 变量

function myFunction() {
    var carName = &quot;Volvo&quot;;

    // 函数内可调用 carName 变量

}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;因为局部变量只作用于函数内，所以不同的函数可以使用相同名称的变量。
局部变量在函数开始执行时创建，函数执行完后局部变量会自动销毁。&lt;/p&gt;

&lt;h2 id=&quot;javascript--8&quot;&gt;JavaScript 全局变量&lt;/h2&gt;

&lt;p&gt;变量在函数外定义，即为全局变量。
全局变量有 &lt;strong&gt;全局作用域&lt;/strong&gt;: 网页中所有脚本和函数均可使用。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var carName = &quot; Volvo&quot;;

// 此处可调用 carName 变量

function myFunction() {

    // 函数内可调用 carName 变量 

}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果变量在函数内没有声明（没有使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt; 关键字），该变量为全局变量。
以下实例中 &lt;code class=&quot;highlighter-rouge&quot;&gt;carName&lt;/code&gt; 在函数内，但是为全局变量。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// 此处可调用 carName 变量

function myFunction() {
    carName = &quot;Volvo&quot;;

    // 此处可调用 carName 变量

}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;javascript--9&quot;&gt;JavaScript 变量生命周期&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 变量生命周期在它声明时初始化。
局部变量在函数执行完毕后销毁。
全局变量在页面关闭后销毁。&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;函数参数&lt;/h3&gt;

&lt;p&gt;函数参数只在函数内起作用，是局部变量。&lt;/p&gt;

&lt;h2 id=&quot;html-&quot;&gt;HTML 中的全局变量&lt;/h2&gt;

&lt;p&gt;在 &lt;code class=&quot;highlighter-rouge&quot;&gt;HTML&lt;/code&gt; 中, 全局变量是 &lt;code class=&quot;highlighter-rouge&quot;&gt;window&lt;/code&gt; 对象: 所有数据变量都属于 &lt;code class=&quot;highlighter-rouge&quot;&gt;window&lt;/code&gt; 对象。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//此处可使用 window.carName

function myFunction() {
    carName = &quot;Volvo&quot;;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Thu, 10 Nov 2016 10:05:27 +0800</pubDate>
        <link>http://vno.onevcat.com/2016/11/javascript%E8%87%AA%E5%AD%A6%E7%AC%AC%E4%B8%89%E5%A4%A9/</link>
        <guid isPermaLink="true">http://vno.onevcat.com/2016/11/javascript%E8%87%AA%E5%AD%A6%E7%AC%AC%E4%B8%89%E5%A4%A9/</guid>
        
        
        <category>JavaScript</category>
        
      </item>
    
      <item>
        <title>JavaScript自学第二天 - HarwordLiu</title>
        <description>&lt;h1 id=&quot;javascript-&quot;&gt;JavaScript 语句&lt;/h1&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 语句向浏览器发出的命令。语句的作用是告诉浏览器该做什么。
下面的 &lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 语句向 &lt;code class=&quot;highlighter-rouge&quot;&gt;id=&quot;demo&quot;&lt;/code&gt; 的 &lt;code class=&quot;highlighter-rouge&quot;&gt;HTML&lt;/code&gt; 元素输出文本 &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;你好 Dolly&quot; &lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;document.getElementById(&quot;demo&quot;).innerHTML = &quot;你好 Dolly&quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section&quot;&gt;分号 ;&lt;/h2&gt;
&lt;p&gt;分号用于分隔 &lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 语句。
通常我们在每条可执行的语句结尾添加分号。
使用分号的另一用处是在一行中编写多条语句。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;a = 5; b = 6; c = a + b;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;也可能看到不带有分号的案例。 在 &lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 中，用分号来结束语句是可选的。&lt;/p&gt;

&lt;h2 id=&quot;javascript--1&quot;&gt;JavaScript 代码&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 代码是 &lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 语句的序列。
浏览器按照编写顺序依次执行每条语句。
下例向网页输出一个标题和两个段落：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;document.getElementById(&quot;demo&quot;).innerHTML=&quot;你好 Dolly&quot;;
document.getElementById(&quot;myDIV&quot;).innerHTML=&quot;你最近怎么样?&quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;javascript--2&quot;&gt;JavaScript 代码块&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 可以分批地组合起来。
代码块以左花括号开始，以右花括号结束。
代码块的作用是一并地执行语句序列。
本例向网页输出一个标题和两个段落：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function myFunction()
{
	document.getElementById(&quot;demo&quot;).innerHTML=&quot;你好Dolly&quot;;
	document.getElementById(&quot;myDIV&quot;).innerHTML=&quot;你最近怎么样?&quot;;
}	
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;javascript--3&quot;&gt;JavaScript 语句标识符&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 语句通常以一个 &lt;strong&gt;语句标识符&lt;/strong&gt; 为开始，并执行该语句。
语句标识符是保留关键字不能作为变量名使用。
下表列出了 &lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 语句标识符 (关键字) ：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;语句&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;break&lt;/td&gt;
      &lt;td&gt;用于跳出循环。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;catch&lt;/td&gt;
      &lt;td&gt;语句块，在 try 语句块执行出错时执行 catch 语句块。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;continue&lt;/td&gt;
      &lt;td&gt;跳过循环中的一个迭代。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;do … while&lt;/td&gt;
      &lt;td&gt;执行一个语句块，在条件语句为 true 时继续执行该语句块。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;for&lt;/td&gt;
      &lt;td&gt;在条件语句为 true 时，可以将代码块执行指定的次数。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;for … in&lt;/td&gt;
      &lt;td&gt;用于遍历数组或者对象的属性（对数组或者对象的属性进行循环操作）。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;function&lt;/td&gt;
      &lt;td&gt;定义一个函数&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;if … else&lt;/td&gt;
      &lt;td&gt;用于基于不同的条件来执行不同的动作。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;return&lt;/td&gt;
      &lt;td&gt;退出函数&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;switch&lt;/td&gt;
      &lt;td&gt;用于基于不同的条件来执行不同的动作。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;throw&lt;/td&gt;
      &lt;td&gt;抛出（生成）错误 。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;try&lt;/td&gt;
      &lt;td&gt;实现错误处理，与 catch 一同使用。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;var&lt;/td&gt;
      &lt;td&gt;声明一个变量。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;while&lt;/td&gt;
      &lt;td&gt;当条件语句为 true 时，执行语句块。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;javascript--4&quot;&gt;JavaScript 对大小写敏感。&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 对大小写是敏感的。
当编写 &lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 语句时，请留意是否关闭大小写切换键。
函数 &lt;code class=&quot;highlighter-rouge&quot;&gt;getElementById&lt;/code&gt; 与 &lt;code class=&quot;highlighter-rouge&quot;&gt;getElementbyID&lt;/code&gt; 是不同的。
同样，变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;myVariable&lt;/code&gt; 与 &lt;code class=&quot;highlighter-rouge&quot;&gt;MyVariable&lt;/code&gt; 也是不同的。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;对代码行进行折行&lt;/h2&gt;
&lt;p&gt;可以在文本字符串中使用反斜杠对代码行进行换行。下面的例子会正确地显示：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;document.write(&quot;你好 \
世界!&quot;);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;不过，不能像这样折行：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;document.write \ 
(&quot;你好世界!&quot;);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*~Tips~*&lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 是脚本语言。浏览器会在读取代码时，逐行地执行脚本代码。而对于传统编程来说，会在执行前对所有代码进行编译。&lt;/p&gt;

&lt;h1 id=&quot;javascript--5&quot;&gt;JavaScript 变量&lt;/h1&gt;
&lt;p&gt;与代数一样，&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 变量可用于存放值（比如 x=5）和表达式（比如 z=x+y）。
变量可以使用短名称（比如 x 和 y），也可以使用描述性更好的名称（比如 age, sum, totalvolume）。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;变量必须以字母开头&lt;/li&gt;
    &lt;li&gt;变量也能以 $ 和 _ 符号开头（不过我们不推荐这么做）&lt;/li&gt;
    &lt;li&gt;变量名称对大小写敏感（y 和 Y 是不同的变量）&lt;/li&gt;
    &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 语句和 &lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 变量都对大小写敏感。&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;javascript--6&quot;&gt;声明（创建） JavaScript 变量&lt;/h2&gt;
&lt;p&gt;在 &lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 中创建变量通常称为”声明”变量。
我们使用 var 关键词来声明变量：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var carname;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;变量声明之后，该变量是空的（它没有值）。
如需向变量赋值，请使用等号：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;carname=&quot;Volvo&quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;也可以在声明变量时对其赋值：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var carname=&quot;Volvo&quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在下面的例子中，我们创建了名为 &lt;code class=&quot;highlighter-rouge&quot;&gt;carname&lt;/code&gt; 的变量，并向其赋值 “Volvo”，然后把它放入 id=”demo” 的 HTML 段落中：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;p id=&quot;demo&quot;&amp;gt;&amp;lt;/p&amp;gt;
var carname=&quot;Volvo&quot;;
document.getElementById(&quot;demo&quot;).innerHTML=carname;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;可以在一条语句中声明很多变量。该语句以 var 开头，并使用逗号分隔变量即可：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var lastname=&quot;Doe&quot;, age=30, job=&quot;carpenter&quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;声明也可横跨多行：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var lastname=&quot;Doe&quot;,
age=30,
job=&quot;carpenter&quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;value--undefined&quot;&gt;Value = undefined&lt;/h2&gt;
&lt;p&gt;在计算机程序中，经常会声明无值的变量。未使用值来声明的变量，其值实际上是 undefined。在执行过以下语句后，变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;carname&lt;/code&gt; 的值将是 undefined：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var carname;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;javascript--7&quot;&gt;重新声明 JavaScript 变量&lt;/h2&gt;
&lt;p&gt;如果重新声明 JavaScript 变量，该变量的值不会丢失：
在以下两条语句执行后，变量 carname 的值依然是 “Volvo”：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var carname=&quot;Volvo&quot;; 
var carname;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;javascript--8&quot;&gt;JavaScript 数据类型&lt;/h1&gt;

&lt;p&gt;字符串&lt;code class=&quot;highlighter-rouge&quot;&gt;String&lt;/code&gt;、数字&lt;code class=&quot;highlighter-rouge&quot;&gt;Number&lt;/code&gt;、布尔&lt;code class=&quot;highlighter-rouge&quot;&gt;Boolean&lt;/code&gt;、数组&lt;code class=&quot;highlighter-rouge&quot;&gt;Array&lt;/code&gt;、对象&lt;code class=&quot;highlighter-rouge&quot;&gt;Object&lt;/code&gt;、空&lt;code class=&quot;highlighter-rouge&quot;&gt;Null&lt;/code&gt;、未定义&lt;code class=&quot;highlighter-rouge&quot;&gt;Undefined&lt;/code&gt;。&lt;/p&gt;

&lt;h2 id=&quot;javascript--9&quot;&gt;JavaScript 拥有动态类型&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt;是一种&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%8A%A8%E6%80%81%E8%AF%AD%E8%A8%80&quot;&gt;动态语言&lt;/a&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 拥有动态类型。这意味着相同的变量可用作不同的类型：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var x;               // x 为 undefined
var x = 5;           // 现在 x 为数字
var x = &quot;John&quot;;      // 现在 x 为字符串
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;javascript--10&quot;&gt;JavaScript 字符串&lt;/h2&gt;
&lt;p&gt;字符串是存储字符（比如 “Bill Gates”）的变量。
字符串可以是引号中的任意文本。您可以使用单引号或双引号：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var carname=&quot;Volvo XC60&quot;;
var carname='Volvo XC60';
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;您可以在字符串中使用引号，只要不匹配包围字符串的引号即可：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var answer=&quot;It's alright&quot;;
var answer=&quot;He is called 'Johnny'&quot;;
var answer='He is called &quot;Johnny&quot;';
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;javascript--11&quot;&gt;JavaScript 数字&lt;/h2&gt;
&lt;p&gt;JavaScript 只有一种数字类型。数字可以带小数点，也可以不带：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var x1=34.00;      //使用小数点来写
var x2=34;         //不使用小数点来写
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;极大或极小的数字可以通过科学（指数）计数法来书写：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var y=123e5;      // 12300000
var z=123e-5;     // 0.00123
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;javascript--12&quot;&gt;JavaScript 布尔&lt;/h2&gt;
&lt;p&gt;布尔（逻辑）只能有两个值：&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var x=true;
var y=false;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;javascript--13&quot;&gt;JavaScript 数组&lt;/h2&gt;
&lt;p&gt;下面的代码创建名为 &lt;code class=&quot;highlighter-rouge&quot;&gt;cars&lt;/code&gt; 的数组：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var cars=new Array();
cars[0]=&quot;Saab&quot;;
cars[1]=&quot;Volvo&quot;;
cars[2]=&quot;BMW&quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;或者 &lt;code class=&quot;highlighter-rouge&quot;&gt;condensed array&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var cars=new Array(&quot;Saab&quot;,&quot;Volvo&quot;,&quot;BMW&quot;);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;或者 &lt;code class=&quot;highlighter-rouge&quot;&gt;literal array&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var cars=[&quot;Saab&quot;,&quot;Volvo&quot;,&quot;BMW&quot;];
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;数组下标是基于零的，所以第一个项目是 [0]，第二个是 [1]，以此类推。&lt;/p&gt;
&lt;h2 id=&quot;javascript--14&quot;&gt;JavaScript 对象&lt;/h2&gt;
&lt;p&gt;对象由花括号分隔。在括号内部，对象的属性以名称和值对的形式 (name : value) 来定义。属性由逗号分隔：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var person={firstname:&quot;John&quot;, lastname:&quot;Doe&quot;, id:5566};
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;上面例子中的对象 &lt;code class=&quot;highlighter-rouge&quot;&gt;person&lt;/code&gt; 有三个属性：&lt;code class=&quot;highlighter-rouge&quot;&gt;firstname&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;lastname&lt;/code&gt; 以及 &lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt;。
空格和折行无关紧要。声明可横跨多行：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var person={
	firstname : &quot;John&quot;,
	lastname  : &quot;Doe&quot;,
	id        :  5566
};
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;对象属性有两种寻址方式：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;name=person.lastname;
name=person[&quot;lastname&quot;];
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;undefined--null&quot;&gt;Undefined 和 Null&lt;/h2&gt;
&lt;p&gt;说到&lt;code class=&quot;highlighter-rouge&quot;&gt;Null&lt;/code&gt;，在iOS跟后端交互的时候，简直是个噩梦。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Undefined&lt;/code&gt; 这个值表示变量不含有值。
可以通过将变量的值设置为 &lt;code class=&quot;highlighter-rouge&quot;&gt;null&lt;/code&gt; 来清空变量。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cars=null;
person=null;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-2&quot;&gt;声明变量类型&lt;/h2&gt;
&lt;p&gt;当声明新变量时，可以使用关键词 &lt;code class=&quot;highlighter-rouge&quot;&gt;new&lt;/code&gt; 来声明其类型：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var carname=new String;
var x=      new Number;
var y=      new Boolean;
var cars=   new Array;
var person= new Object;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 变量均为对象。当您声明一个变量时，就创建了一个新的对象。
万物皆对象☺️&lt;/p&gt;

&lt;h1 id=&quot;javascript--15&quot;&gt;JavaScript 对象&lt;/h1&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 对象是拥有属性和方法的数据。&lt;/p&gt;
&lt;h2 id=&quot;section-3&quot;&gt;真实生活中的对象，属性和方法&lt;/h2&gt;
&lt;p&gt;真实生活中，一辆汽车是一个对象。
对象有它的属性，如重量和颜色等，方法有启动停止等:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;对象&lt;/th&gt;
      &lt;th&gt;属性&lt;/th&gt;
      &lt;th&gt;方法&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;img src=&quot;http://harwordliu.com/assets/blogImages/2016-11-03-car.jpg&quot; alt=&quot;car&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;car.name car.model car.color&lt;/td&gt;
      &lt;td&gt;car.start() car.drive() car.brake()&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;所有汽车都有这些属性，但是每款车的属性都不尽相同。
所有汽车都拥有这些方法，但是它们被执行的时间都不尽相同。&lt;/p&gt;

&lt;h2 id=&quot;javascript--16&quot;&gt;JavaScript 对象&lt;/h2&gt;
&lt;p&gt;在 &lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt;中，几乎所有的事物都是对象。
以下代码为变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;car&lt;/code&gt; 设置值为 “Fiat” :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var car = &quot;Fiat&quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;对象也是一个变量，但对象可以包含多个值（多个变量）。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var car = {name:&quot;Fiat&quot;, model:500, color:&quot;white&quot;};
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在以上实例中，4 个值&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;Fiat&quot;, 500, &quot;white&quot;&lt;/code&gt;赋予变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;car&lt;/code&gt;。
在以上实例中，4 个变量&lt;code class=&quot;highlighter-rouge&quot;&gt;name, model, color&lt;/code&gt;赋予变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;car&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 对象是变量的容器。&lt;/p&gt;

&lt;h2 id=&quot;section-4&quot;&gt;对象定义&lt;/h2&gt;
&lt;p&gt;你可以使用字符来定义和创建 &lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 对象:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var person = {firstName:&quot;John&quot;, lastName:&quot;Doe&quot;, age:50, eyeColor:&quot;blue&quot;};
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;定义 JavaScript 对象可以跨越多行，空格跟换行不是必须的：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var person = {
	firstName:&quot;John&quot;,
	lastName:&quot;Doe&quot;,
	age:50,
	eyeColor:&quot;blue&quot;
};
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-5&quot;&gt;对象属性&lt;/h2&gt;
&lt;p&gt;可以说 &lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 对象是变量的容器。
但是，我们通常认为 &lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 对象是键值对的容器。
键值对通常写法为 &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt; : &lt;code class=&quot;highlighter-rouge&quot;&gt;value&lt;/code&gt; (键与值以冒号分割)。
键值对在 &lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 对象通常称为 对象属性。&lt;/p&gt;

&lt;h2 id=&quot;section-6&quot;&gt;访问对象属性&lt;/h2&gt;

&lt;p&gt;可以通过两种方式访问对象属性:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;person.lastName;
person[&quot;lastName&quot;];
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-7&quot;&gt;对象方法&lt;/h2&gt;
&lt;p&gt;对象的方法定义了一个函数，并作为对象的属性存储。
对象方法通过添加 () 调用 (作为一个函数)。
该实例访问了 person 对象的 fullName() 方法:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;name = person.fullName();
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果你要访问 person 对象的 fullName 属性，它将作为一个定义函数的字符串返回：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;name = person.fullName;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-8&quot;&gt;访问对象方法&lt;/h2&gt;
&lt;p&gt;可以使用以下语法创建对象方法：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;methodName : function() { code lines }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;可以使用以下语法访问对象方法：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;objectName.methodName()
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;通常 &lt;code class=&quot;highlighter-rouge&quot;&gt;fullName()&lt;/code&gt; 是作为 &lt;code class=&quot;highlighter-rouge&quot;&gt;person&lt;/code&gt; 对象的一个方法， &lt;code class=&quot;highlighter-rouge&quot;&gt;fullName&lt;/code&gt;是作为一个属性。
有多种方式可以创建，使用和修改 &lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 对象。
同样也有多种方式用来创建，使用和修改属性和方法。&lt;/p&gt;

&lt;h2 id=&quot;section-9&quot;&gt;总结&lt;/h2&gt;
&lt;p&gt;本篇笔记依然都是基础篇，详细知识点博主在日后的文章中会展开深入学习。&lt;/p&gt;

</description>
        <pubDate>Thu, 03 Nov 2016 13:02:36 +0800</pubDate>
        <link>http://vno.onevcat.com/2016/11/javascript%E8%87%AA%E5%AD%A6%E7%AC%AC%E4%BA%8C%E5%A4%A9/</link>
        <guid isPermaLink="true">http://vno.onevcat.com/2016/11/javascript%E8%87%AA%E5%AD%A6%E7%AC%AC%E4%BA%8C%E5%A4%A9/</guid>
        
        
        <category>JavaScript</category>
        
      </item>
    
      <item>
        <title>JavaScript自学第一天 - HarwordLiu</title>
        <description>&lt;h1 id=&quot;javascripthttpszhwikipediaorgzh-hansjavascript-&quot;&gt;&lt;a href=&quot;https://zh.wikipedia.org/zh-hans/JavaScript&quot;&gt;JavaScript&lt;/a&gt; 简介&lt;/h1&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt;是&lt;code class=&quot;highlighter-rouge&quot;&gt;Web&lt;/code&gt;的编程语言。&lt;/p&gt;

&lt;p&gt;所有现代的&lt;code class=&quot;highlighter-rouge&quot;&gt;HTML&lt;/code&gt;页面都使用&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;更可广泛用于服务器、PC、笔记本电脑、平板电脑和智能手机等设备。&lt;/p&gt;

&lt;p&gt;博主主业iOS开发, 不过就目前移动端的趋势,&lt;/p&gt;

&lt;p&gt;仿佛&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt;已经主宰了三端的开发。&lt;/p&gt;

&lt;p&gt;混合开发的优势实在是太明显了。所以该学的要学啊!&lt;/p&gt;

&lt;p&gt;学习&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt;要有&lt;code class=&quot;highlighter-rouge&quot;&gt;HTML&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;CSS&lt;/code&gt;的基础&lt;/p&gt;

&lt;p&gt;因为大部分实例都是通过web来演示的&lt;/p&gt;

&lt;h2 id=&quot;javascript-&quot;&gt;JavaScript 是脚本语言&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 是一种轻量级的编程语言。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 是可插入 HTML 页面的编程代码。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 插入 HTML 页面后，可由所有的现代浏览器执行。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 很容易学习。(瞎比说的 …)&lt;/p&gt;

&lt;h2 id=&quot;javascript--1&quot;&gt;JavaScript 能干什么?&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;直接写入HTML输出流&lt;/p&gt;

  &lt;p&gt;对交互事件作出相应反应&lt;/p&gt;

  &lt;p&gt;改变HTML内容&lt;/p&gt;

  &lt;p&gt;改变HTML中的图片&lt;/p&gt;

  &lt;p&gt;验证输入&lt;/p&gt;

  &lt;p&gt;…&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;javascript--java&quot;&gt;JavaScript != Java&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 与 &lt;code class=&quot;highlighter-rouge&quot;&gt;Java&lt;/code&gt; 是两种完全不同的语言，无论在概念上还是设计上。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Java&lt;/code&gt;（由 Sun 发明）是更复杂的编程语言。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ECMA-262&lt;/code&gt; 是 &lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 标准的官方名称。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 由 &lt;code class=&quot;highlighter-rouge&quot;&gt;Brendan Eich&lt;/code&gt; 发明。
它于 1995 年出现在 &lt;code class=&quot;highlighter-rouge&quot;&gt;Netscape&lt;/code&gt; 中（该浏览器已停止更新），并于 1997 年被 &lt;code class=&quot;highlighter-rouge&quot;&gt;ECMA&lt;/code&gt;（一个标准协会）采纳。&lt;/p&gt;

&lt;h1 id=&quot;javascript--2&quot;&gt;JavaScript 用法&lt;/h1&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;HTML&lt;/code&gt; 中的脚本必须位于 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 与 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;/script&amp;gt;&lt;/code&gt; 标签之间。
脚本可被放置在 &lt;code class=&quot;highlighter-rouge&quot;&gt;HTML&lt;/code&gt; 页面的 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 部分中。&lt;/p&gt;

&lt;h2 id=&quot;script&quot;&gt;&amp;lt;script&amp;gt;标签&lt;/h2&gt;
&lt;p&gt;如需在 &lt;code class=&quot;highlighter-rouge&quot;&gt;HTML&lt;/code&gt; 页面中插入 &lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt;，请使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 标签。
&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;/script&amp;gt;&lt;/code&gt; 会告诉 &lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 在何处开始和结束。
&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;/script&amp;gt;&lt;/code&gt; 之间的代码行包含了 &lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;
alert(&quot;我的第一个 JavaScript&quot;);
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;head--body-javascript&quot;&gt;在 &amp;lt;head&amp;gt; 或者 &amp;lt;body&amp;gt; 的JavaScript&lt;/h2&gt;
&lt;p&gt;可以在 HTML 文档中放入不限数量的脚本。
脚本可位于 HTML 的 &amp;lt;body&amp;gt; 或 &amp;lt;head&amp;gt; 部分中，或者同时存在于两个部分中。
通常的做法是把函数放入 &amp;lt;head&amp;gt; 部分中，或者放在页面底部。这样就可以把它们安置到同一处位置，不会干扰页面的内容。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&amp;lt;head&amp;gt;&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;demo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;我的第一个 JavaScript 函数&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;我的 Web 页面&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;demo&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;一个段落&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onclick=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;myFunction()&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;尝试一下&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&amp;lt;body&amp;gt;&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;我的 Web 页面&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;demo&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;一个段落&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onclick=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;myFunction()&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;尝试一下&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;demo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;我的第一个 JavaScript 函数&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;javascript&quot;&gt;加载外部的 JavaScript&lt;/h2&gt;
&lt;p&gt;可以把脚本保存到外部文件中。外部文件通常包含被多个网页使用的代码。
外部 &lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 文件的文件扩展名是 .js。
如需使用外部文件，请在 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 标签的 &lt;code class=&quot;highlighter-rouge&quot;&gt;src&lt;/code&gt; 属性中设置该 .js 文件：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;myScript.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;javascript--3&quot;&gt;JavaScript 输出&lt;/h1&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 没有任何打印或者输出的函数。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 可以通过不同的方式来输出数据：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;使用 window.alert() 弹出警告框。&lt;/li&gt;
    &lt;li&gt;使用 document.write() 方法将内容写到 HTML 文档中。&lt;/li&gt;
    &lt;li&gt;使用 innerHTML 写入到 HTML 元素。&lt;/li&gt;
    &lt;li&gt;使用 console.log() 写入到浏览器的控制台。&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;javascript--4&quot;&gt;JavaScript 语法&lt;/h1&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 是一个程序语言。语法规则定义了语言结构。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 是一个脚本语言。它是一个轻量级，但功能强大的编程语言。&lt;/p&gt;

&lt;h2 id=&quot;javascript--5&quot;&gt;JavaScript 字面量&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;数字（Number）字面量&lt;/strong&gt; 可以是整数或者是小数，或者是科学计数(e)。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;3.14
1001
123e5
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;字符串（String）字面量&lt;/strong&gt; 可以使用单引号或双引号:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;John Doe&quot;
'John Doe'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;表达式字面量&lt;/strong&gt; 用于计算：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;5 + 6
5 * 10
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;数组（Array）字面量&lt;/strong&gt; 定义一个数组：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[40, 100, 1, 5, 25, 10]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;对象（Object）字面量&lt;/strong&gt; 定义一个对象：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;firstName:&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;John&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;lastName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Doe&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;eyeColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;blue&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;函数（Function）字面量&lt;/strong&gt; 定义一个函数：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function myFunction(a, b) { return a * b;}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;javascript--6&quot;&gt;JavaScript 变量&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 使用关键字 &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt; 来定义变量， 使用等号来为变量赋值：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var x, length;
x = 5;
length = 6;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;变量可以通过变量名访问。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;在&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E6%8C%87%E4%BB%A4%E5%BC%8F%E7%B7%A8%E7%A8%8B&quot;&gt;指令式语言&lt;/a&gt;中，变量通常是可变的。字面量是一个恒定的值。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;javascript--7&quot;&gt;JavaScript 操作符&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;类型&lt;/th&gt;
      &lt;th&gt;实例&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;赋值，算术和位运算符&lt;/td&gt;
      &lt;td&gt;=  +  -  *  /&lt;/td&gt;
      &lt;td&gt;在 JS 运算符中描述&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;条件，比较及逻辑运算符&lt;/td&gt;
      &lt;td&gt;== === != &amp;lt; &amp;gt; &amp;gt;= &amp;lt;= &amp;amp;&amp;amp; || !&lt;/td&gt;
      &lt;td&gt;在 JS 比较运算符中描述&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;javascript--8&quot;&gt;JavaScript 语句&lt;/h2&gt;
&lt;p&gt;在 &lt;code class=&quot;highlighter-rouge&quot;&gt;HTML&lt;/code&gt; 中，&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 语句向浏览器发出的命令。
语句是用分号分隔&lt;code class=&quot;highlighter-rouge&quot;&gt;;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;javascript--9&quot;&gt;JavaScript 关键词&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 语句通常于关键词为开头。 &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt; 关键词告诉浏览器创建一个新的变量：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var x = 5 + 6;
var y = x * 10;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;javascript--10&quot;&gt;JavaScript 关键字&lt;/h2&gt;
&lt;p&gt;和其他任何编程语言一样，&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 保留了一些关键字为自己所用。
&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 同样保留了一些关键字，这些关键字在当前的语言版本中并没有使用，但在以后 &lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 扩展中会用到。
&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 关键字必须以字母、下划线&lt;code class=&quot;highlighter-rouge&quot;&gt;（_）&lt;/code&gt;或美元符&lt;code class=&quot;highlighter-rouge&quot;&gt;（$）&lt;/code&gt;开始。
后续的字符可以是字母、数字、下划线或美元符（数字是不允许作为首字符出现的，以便 &lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 可以轻易区分开关键字和数字）。&lt;/p&gt;

&lt;h2 id=&quot;javascript--11&quot;&gt;JavaScript 注释&lt;/h2&gt;
&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;//&lt;/code&gt;进行注释&lt;/p&gt;

&lt;h2 id=&quot;javascript--12&quot;&gt;JavaScript 数据类型&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 有多种数据类型：数字，字符串，数组，对象等等：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var length = 16;                                  // Number 通过数字字面量赋值 
var points = x * 10;                              // Number 通过表达式字面量赋值
var lastName = &quot;Johnson&quot;;                         // String 通过字符串字面量赋值
var cars = [&quot;Saab&quot;, &quot;Volvo&quot;, &quot;BMW&quot;];              // Array  通过数组字面量赋值
var person = {firstName:&quot;John&quot;, lastName:&quot;Doe&quot;};  // Object 通过对象字面量赋值
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;javascript--13&quot;&gt;JavaScript 函数&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 语句可以写在函数内，函数可以重复引用：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;引用一个函数&lt;/strong&gt; = 调用函数(执行函数内的语句)。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function myFunction(a, b) {
	return a * b;                                // 返回 a 乘于 b 的结果
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;javascript--14&quot;&gt;JavaScript 对大小写敏感。&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 对大小写是敏感的。
当编写 &lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 语句时，请留意是否关闭大小写切换键。
函数 &lt;code class=&quot;highlighter-rouge&quot;&gt;getElementById&lt;/code&gt; 与 &lt;code class=&quot;highlighter-rouge&quot;&gt;getElementbyID&lt;/code&gt; 是不同的。
同样，变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;myVariable&lt;/code&gt; 与 &lt;code class=&quot;highlighter-rouge&quot;&gt;MyVariable&lt;/code&gt; 也是不同的。&lt;/p&gt;

&lt;h2 id=&quot;javascript--15&quot;&gt;JavaScript 字符集&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt; 使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;Unicode&lt;/code&gt; 字符集。
&lt;code class=&quot;highlighter-rouge&quot;&gt;Unicode&lt;/code&gt; 覆盖了所有的字符，包含标点等字符。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;总结&lt;/h2&gt;
&lt;p&gt;第一篇笔记就先到这里&lt;/p&gt;

</description>
        <pubDate>Wed, 02 Nov 2016 21:32:24 +0800</pubDate>
        <link>http://vno.onevcat.com/2016/11/JavaScript-%E8%87%AA%E5%AD%A6%E7%AC%AC%E4%B8%80%E5%A4%A9/</link>
        <guid isPermaLink="true">http://vno.onevcat.com/2016/11/JavaScript-%E8%87%AA%E5%AD%A6%E7%AC%AC%E4%B8%80%E5%A4%A9/</guid>
        
        
        <category>JavaScript</category>
        
      </item>
    
      <item>
        <title>写于2016年末，某日深夜 - HarwordLiu</title>
        <description>&lt;h2 id=&quot;hello-world&quot;&gt;Hello World&lt;/h2&gt;
&lt;p&gt;还记得2015年下定决心正式走入这一行，一转眼已经2016年末了。&lt;/p&gt;

&lt;p&gt;依稀记得当初在控制台打印出的第一行便是&lt;code class=&quot;highlighter-rouge&quot;&gt;Hello World&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;好吧，我想每个程序猿都有这么一个&lt;code class=&quot;highlighter-rouge&quot;&gt;Hello World&lt;/code&gt;情节。&lt;/p&gt;

&lt;p&gt;同样也有一个博客情节。&lt;/p&gt;

&lt;p&gt;一直想弄一个自己的博客，终于经历一个星期，坎坎坷坷算是弄稳定了。&lt;/p&gt;

&lt;p&gt;从最初的域名购买到主机选择，等等&lt;/p&gt;

&lt;p&gt;最终选择了&lt;code class=&quot;highlighter-rouge&quot;&gt;自己购买域名&lt;/code&gt;+&lt;code class=&quot;highlighter-rouge&quot;&gt;Github托管数据&lt;/code&gt;+&lt;code class=&quot;highlighter-rouge&quot;&gt;Jekyll&lt;/code&gt;+&lt;code class=&quot;highlighter-rouge&quot;&gt;一些组件&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;目前博客刚刚开始，好吧，这块地盘属于我！&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;最初的目的&lt;/h2&gt;
&lt;p&gt;最初的目的其实特别简单，博主从事iOS开发，但是迫于大势所趋，&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt;渐渐地称霸，真的是很无奈的一件事。不过这也验证了: &lt;strong&gt;我们生活在一个科技变革最快的时代。很不幸软件行业又是所有行业变化最剧烈的行业。&lt;a href=&quot;https://zh.m.wikipedia.org/zh-hans/%E6%91%A9%E5%B0%94%E5%AE%9A%E5%BE%8B&quot;&gt;摩尔定律&lt;/a&gt;每18个月计算能力翻一倍。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;所以学习&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt;必须的。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;而自学之路注定是坎坷的，我比较偏向于产品与学习同时推进的学习方式。&lt;/p&gt;

&lt;p&gt;So，这就成了我这个博客的最初目的。&lt;/p&gt;

&lt;p&gt;我要自己写一个我自己的博客。我的博客网站就是我最好的产品！&lt;/p&gt;

&lt;p&gt;但是对于我来讲上来就把博客搞得很华丽这个不现实，所以最终选择了楼上的plan。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;目前计划&lt;/h2&gt;
&lt;p&gt;短期内的计划是更一个系列博文，关于&lt;code class=&quot;highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt;自学&lt;/p&gt;

&lt;p&gt;期间也会有一些关于iOS的技术&lt;/p&gt;

&lt;p&gt;有任何关于本博客的问题都可以直接 &lt;a href=&quot;harwordliu@163.com&quot;&gt;联系我&lt;/a&gt; &lt;a href=&quot;mailto:harwordliu@163.com&quot;&gt;harwordliu@163.com&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;关于&lt;/h2&gt;
&lt;p&gt;这个博客姓&lt;code class=&quot;highlighter-rouge&quot;&gt;Liu&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;所以我可能很任性，我想更什么就更什么！&lt;/p&gt;

&lt;p&gt;哈哈哈哈~&lt;/p&gt;

&lt;p&gt;大致以下几种，优先级从上到下&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;技术博客&lt;/li&gt;
    &lt;li&gt;心情鸡汤&lt;/li&gt;
    &lt;li&gt;游戏评测&lt;/li&gt;
    &lt;li&gt;吹逼时刻&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;section-3&quot;&gt;最后&lt;/h2&gt;

&lt;p&gt;我会随时更新本文的内容&lt;/p&gt;

&lt;p&gt;欢迎来到&lt;em&gt;HarwordLiu&lt;/em&gt;的博客&lt;/p&gt;

</description>
        <pubDate>Mon, 31 Oct 2016 23:00:00 +0800</pubDate>
        <link>http://vno.onevcat.com/2016/10/%E5%86%99%E4%BA%8E2016%E5%B9%B4%E6%9C%AB,%E6%B7%B1%E5%A4%9C/</link>
        <guid isPermaLink="true">http://vno.onevcat.com/2016/10/%E5%86%99%E4%BA%8E2016%E5%B9%B4%E6%9C%AB,%E6%B7%B1%E5%A4%9C/</guid>
        
        
        <category>前言</category>
        
      </item>
    
  </channel>
</rss>
